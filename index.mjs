// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import{isPrimitive as e}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.2.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/string-split-grapheme-clusters@v0.1.0-esm/index.mjs";import{isPrimitive as t}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@v0.1.0-esm/index.mjs";import{primitives as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string-array@v0.2.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/string-replace@v0.2.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-escape-regexp-string@v0.2.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";function m(m,o,a){var g,l,p,v,j;if(!e(m))throw new TypeError(d("invalid argument. Must provide a string. Value: `%s`.",m));if(!t(o))throw new TypeError(d("invalid argument. Must provide a nonnegative integer. Value: `%s`.",o));if(arguments.length>2){if(!(p=e(a))&&!r(a))throw new TypeError(d("invalid argument. Must provide a string or an array of strings. Value: `%s`.",a));for(p&&(a=s(a)),g=a.length-1,l="",j=0;j<g;j++)l+=n(a[j]),l+="|";l+=n(a[g]),v=new RegExp("(?:"+l+"){0,"+o+"}$")}else v=new RegExp("[ \f\n\r\t\v   - \u2028\u2029  　\ufeff]{0,"+o+"}$");return i(m,v,"")}export{m as default};
//# sourceMappingURL=index.mjs.map
