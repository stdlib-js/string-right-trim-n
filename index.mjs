// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/string-split-grapheme-clusters@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string-array@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/string-replace@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-escape-regexp-string@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";var d=e.isPrimitive,a=s,o=r.isPrimitive,g=t.primitives,p=i,l=n,v=m;var j=function(e,s,r){var t,i,n,m,j;if(!d(e))throw new TypeError(v("invalid argument. Must provide a string. Value: `%s`.",e));if(!o(s))throw new TypeError(v("invalid argument. Must provide a nonnegative integer. Value: `%s`.",s));if(arguments.length>2){if(!(n=d(r))&&!g(r))throw new TypeError(v("invalid argument. Must provide a string or an array of strings. Value: `%s`.",r));for(n&&(r=a(r)),t=r.length-1,i="",j=0;j<t;j++)i+=l(r[j]),i+="|";i+=l(r[t]),m=new RegExp("(?:"+i+"){0,"+s+"}$")}else m=new RegExp("[ \f\n\r\t\v   - \u2028\u2029  　\ufeff]{0,"+s+"}$");return p(e,m,"")};export{j as default};
//# sourceMappingURL=index.mjs.map
